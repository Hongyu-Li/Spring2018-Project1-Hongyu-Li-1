selected=inaugu.info.r$Filename[1]))),
fluidRow(
plotOutput('sentiment', height = "1000px")
)
),
server = function(input, output, session) {
# Combine the selected variables into a new data frame
selectedData <- reactive({
list(term1=as.numeric(substr(input$speech1,nchar(input$speech1)-4,
nchar(input$speech1)-4)),
term2=as.numeric(substr(input$speech2,nchar(input$speech2)-4,
nchar(input$speech2)-4)),
file1=substr(input$speech1,6,nchar(input$speech1)-6),
file2=substr(input$speech2,6,nchar(input$speech2)-6),
president1=sentiment.df$President[which(sentiment.df$Filename==paste0('InauguralSpeeches/',input$speech1))][1],
president2=sentiment.df$President[which(sentiment.df$Filename==paste0('InauguralSpeeches/',input$speech2))][1]
)})
output$sentiment <- renderPlot(height = 400, {
par(mfrow=c(1,2))
f.plotsent(In.list=sentiment.df,
InFile=selectedData()$file1,
InTerm=selectedData()$term1,
President=selectedData()$president1)
f.plotsent(In.list=sentiment.df,
InFile=selectedData()$file2,
InTerm=selectedData()$term2,
President=selectedData()$president2)
})
},
options = list(height = 600)
)
shinyApp(
ui = fluidPage(
fluidRow(style = "padding-bottom: 20px;",
column(10, selectInput('speech1', 'Democratic',
inaugu.info.d$Filename,
selected=inaugu.info.d$Filename[1])),
column(10, selectInput('speech2', 'Republican',
inaugu.info.r$Filename,
selected=inaugu.info.r$Filename[1]))),
fluidRow(
plotOutput('sentiment', height = "1000px")
)
),
server = function(input, output, session) {
# Combine the selected variables into a new data frame
selectedData <- reactive({
list(term1=as.numeric(substr(input$speech1,nchar(input$speech1)-4,
nchar(input$speech1)-4)),
term2=as.numeric(substr(input$speech2,nchar(input$speech2)-4,
nchar(input$speech2)-4)),
file1=substr(input$speech1,6,nchar(input$speech1)-6),
file2=substr(input$speech2,6,nchar(input$speech2)-6),
president1=sentiment.df$President[which(sentiment.df$Filename==paste0('InauguralSpeeches/',input$speech1))][1],
president2=sentiment.df$President[which(sentiment.df$Filename==paste0('InauguralSpeeches/',input$speech2))][1]
)})
output$sentiment <- renderPlot(height = 400, {
par(mfrow=c(1,2))
f.plotsent(In.list=sentiment.df,
InFile=selectedData()$file1,
InTerm=selectedData()$term1,
President=selectedData()$president1)
f.plotsent(In.list=sentiment.df,
InFile=selectedData()$file2,
InTerm=selectedData()$term2,
President=selectedData()$president2)
})
},
options = list(height = 600)
)
shinyApp(
ui = fluidPage(
fluidRow(style = "padding-bottom: 20px;",
column(8, selectInput('speech1', 'Democratic',
inaugu.info.d$Filename,
selected=inaugu.info.d$Filename[1])),
column(8, selectInput('speech2', 'Republican',
inaugu.info.r$Filename,
selected=inaugu.info.r$Filename[1]))),
fluidRow(
plotOutput('sentiment', height = "1000px")
)
),
server = function(input, output, session) {
# Combine the selected variables into a new data frame
selectedData <- reactive({
list(term1=as.numeric(substr(input$speech1,nchar(input$speech1)-4,
nchar(input$speech1)-4)),
term2=as.numeric(substr(input$speech2,nchar(input$speech2)-4,
nchar(input$speech2)-4)),
file1=substr(input$speech1,6,nchar(input$speech1)-6),
file2=substr(input$speech2,6,nchar(input$speech2)-6),
president1=sentiment.df$President[which(sentiment.df$Filename==paste0('InauguralSpeeches/',input$speech1))][1],
president2=sentiment.df$President[which(sentiment.df$Filename==paste0('InauguralSpeeches/',input$speech2))][1]
)})
output$sentiment <- renderPlot(height = 400, {
par(mfrow=c(1,2))
f.plotsent(In.list=sentiment.df,
InFile=selectedData()$file1,
InTerm=selectedData()$term1,
President=selectedData()$president1)
f.plotsent(In.list=sentiment.df,
InFile=selectedData()$file2,
InTerm=selectedData()$term2,
President=selectedData()$president2)
})
},
options = list(height = 600)
)
shinyApp(
ui = fluidPage(
fluidRow(style = "padding-bottom: 20px;",
column(4, selectInput('speech1', 'Democratic',
inaugu.info.d$Filename,
selected=inaugu.info.d$Filename[1])),
column(4, selectInput('speech2', 'Republican',
inaugu.info.r$Filename,
selected=inaugu.info.r$Filename[1]))),
fluidRow(
plotOutput('sentiment', height = "1000px")
)
),
server = function(input, output, session) {
# Combine the selected variables into a new data frame
selectedData <- reactive({
list(term1=as.numeric(substr(input$speech1,nchar(input$speech1)-4,
nchar(input$speech1)-4)),
term2=as.numeric(substr(input$speech2,nchar(input$speech2)-4,
nchar(input$speech2)-4)),
file1=substr(input$speech1,6,nchar(input$speech1)-6),
file2=substr(input$speech2,6,nchar(input$speech2)-6),
president1=sentiment.df$President[which(sentiment.df$Filename==paste0('InauguralSpeeches/',input$speech1))][1],
president2=sentiment.df$President[which(sentiment.df$Filename==paste0('InauguralSpeeches/',input$speech2))][1]
)})
output$sentiment <- renderPlot(height = 400, {
par(mfrow=c(1,2))
f.plotsent(In.list=sentiment.df,
InFile=selectedData()$file1,
InTerm=selectedData()$term1,
President=selectedData()$president1)
f.plotsent(In.list=sentiment.df,
InFile=selectedData()$file2,
InTerm=selectedData()$term2,
President=selectedData()$president2)
})
},
options = list(height = 600)
)
shinyApp(
ui = fluidPage(
fluidRow(style = "padding-bottom: 20px;",
column(4, selectInput('speech1', 'Democratic',
inaugu.info.d$Filename,
selected=inaugu.info.d$Filename[1])),
column(4, selectInput('speech2', 'Republican',
inaugu.info.r$Filename,
selected=inaugu.info.r$Filename[1]))),
fluidRow(
plotOutput('sentiment', height = "1000px")
)
),
server = function(input, output, session) {
# Combine the selected variables into a new data frame
selectedData <- reactive({
list(term1=as.numeric(substr(input$speech1,nchar(input$speech1)-4,
nchar(input$speech1)-4)),
term2=as.numeric(substr(input$speech2,nchar(input$speech2)-4,
nchar(input$speech2)-4)),
file1=substr(input$speech1,6,nchar(input$speech1)-6),
file2=substr(input$speech2,6,nchar(input$speech2)-6),
president1=sentiment.df$President[which(sentiment.df$Filename==paste0('InauguralSpeeches/',input$speech1))][1],
president2=sentiment.df$President[which(sentiment.df$Filename==paste0('InauguralSpeeches/',input$speech2))][1]
)})
output$sentiment <- renderPlot(height = 600, {
par(mfrow=c(1,2))
f.plotsent(In.list=sentiment.df,
InFile=selectedData()$file1,
InTerm=selectedData()$term1,
President=selectedData()$president1)
f.plotsent(In.list=sentiment.df,
InFile=selectedData()$file2,
InTerm=selectedData()$term2,
President=selectedData()$president2)
})
},
options = list(height = 800)
)
shinyApp(
ui = fluidPage(
fluidRow(style = "padding-bottom: 20px;",
column(4, selectInput('speech1', 'Democratic',
inaugu.info.d$Filename,
selected=inaugu.info.d$Filename[1])),
column(4, selectInput('speech2', 'Republican',
inaugu.info.r$Filename,
selected=inaugu.info.r$Filename[1]))),
fluidRow(
plotOutput('sentiment', height = "1000px")
)
),
server = function(input, output, session) {
# Combine the selected variables into a new data frame
selectedData <- reactive({
list(term1=as.numeric(substr(input$speech1,nchar(input$speech1)-4,
nchar(input$speech1)-4)),
term2=as.numeric(substr(input$speech2,nchar(input$speech2)-4,
nchar(input$speech2)-4)),
file1=substr(input$speech1,6,nchar(input$speech1)-6),
file2=substr(input$speech2,6,nchar(input$speech2)-6),
president1=sentiment.df$President[which(sentiment.df$Filename==paste0('InauguralSpeeches/',input$speech1))][1],
president2=sentiment.df$President[which(sentiment.df$Filename==paste0('InauguralSpeeches/',input$speech2))][1]
)})
output$sentiment <- renderPlot(height = 500, {
par(mfrow=c(1,2))
f.plotsent(In.list=sentiment.df,
InFile=selectedData()$file1,
InTerm=selectedData()$term1,
President=selectedData()$president1)
f.plotsent(In.list=sentiment.df,
InFile=selectedData()$file2,
InTerm=selectedData()$term2,
President=selectedData()$president2)
})
},
options = list(height = 700)
)
sentiment.df<-sentiment.df%>%
filter(!is.na(word.count))
sink(file='E:/Columbia University/2018Spring/Applied Data Science/Github/Spring2018-Project1-Hongyu-Li/output/sentimentdata.csv')
write.csv(sentiment.df)
sink()
sink(file='E:/Columbia University/2018Spring/Applied Data Science/Github/Spring2018-Project1-Hongyu-Li/output/inauguinfo.csv')
write.csv(inaugu.info)
sink()
sentiment.df<-read.csv('E:/Columbia University/2018Spring/Applied Data Science/Github/Spring2018-Project1-Hongyu-Li/output/sentimentdata.csv')
inaugo.info<-read.cev('E:/Columbia University/2018Spring/Applied Data Science/Github/Spring2018-Project1-Hongyu-Li/output/inauguinfo.csv')
inaugu.info$Filename<-substr(inaugu.info$Filename, 19,
nchar(inaugu.info$Filename))
inaugu.info.d<-inaugu.info[inaugu.info$Party=='Democratic',]
inaugu.info.r<-inaugu.info[inaugu.info$Party=='Republican',]
shinyApp(
ui = fluidPage(
fluidRow(style = "padding-bottom: 20px;",
column(4, selectInput('speech1', 'Democratic',
inaugu.info.d$Filename,
selected=inaugu.info.d$Filename[1])),
column(4, selectInput('speech2', 'Republican',
inaugu.info.r$Filename,
selected=inaugu.info.r$Filename[1]))),
fluidRow(
plotOutput('sentiment', height = "1000px")
)
),
server = function(input, output, session) {
# Combine the selected variables into a new data frame
selectedData <- reactive({
list(term1=as.numeric(substr(input$speech1,nchar(input$speech1)-4,
nchar(input$speech1)-4)),
term2=as.numeric(substr(input$speech2,nchar(input$speech2)-4,
nchar(input$speech2)-4)),
file1=substr(input$speech1,6,nchar(input$speech1)-6),
file2=substr(input$speech2,6,nchar(input$speech2)-6),
president1=sentiment.df$President[which(sentiment.df$Filename==paste0('InauguralSpeeches/',input$speech1))][1],
president2=sentiment.df$President[which(sentiment.df$Filename==paste0('InauguralSpeeches/',input$speech2))][1]
)})
output$sentiment <- renderPlot(height = 500, {
par(mfrow=c(1,2))
f.plotsent(In.list=sentiment.df,
InFile=selectedData()$file1,
InTerm=selectedData()$term1,
President=selectedData()$president1)
f.plotsent(In.list=sentiment.df,
InFile=selectedData()$file2,
InTerm=selectedData()$term2,
President=selectedData()$president2)
})
},
options = list(height = 700)
)
sink(file='E:/Columbia University/2018Spring/Applied Data Science/Github/Spring2018-Project1-Hongyu-Li/output/sentimentdata.csv')
write.csv(sentiment.df)sink()
> sink(file='E:/Columbia University/2018Spring/Applied Data Science/Github/Spring2018-Project1-Hongyu-Li/output/inauguinfo.csv')
> write.csv(inaugu.info)
> sink()
sink(file='E:/Columbia University/2018Spring/Applied Data Science/Github/Spring2018-Project1-Hongyu-Li/output/sentimentdata.csv')
write.csv(sentiment.df)
sink()
sink(file='E:/Columbia University/2018Spring/Applied Data Science/Github/Spring2018-Project1-Hongyu-Li/output/inauguinfo.csv')
write.csv(inaugu.info)
sink()
setwd('E:/Columbia University/2018Spring/Applied Data Science/Github/Spring2018-Project1-Hongyu-Li/data/')
inaugu.info<-read.csv('InaugurationInfo.csv',stringsAsFactors = FALSE)
inaugu.info$Filename<-paste('InauguralSpeeches/','inaug',inaugu.info$File,'-',
inaugu.info$Term,'.txt',sep='')
##Select the presidents from republican or democratic party
library(plyr)
library(dplyr)
inaugu.info<-inaugu.info %>%
filter(Party == 'Democratic' | Party == 'Republican')
##Add full text into inaugu.info
inaugu.info$Fulltext<-rep(NA,nrow(inaugu.info))
for (i in 1:nrow(inaugu.info)){
inaugu.info[i,7]<-paste(readLines(inaugu.info$Filename[i],n=-1,skipNul=TRUE),
collapse=" ")
}
library(shiny)
library(plotly)
div(plot_ly(type = "box") %>%
add_boxplot(y=inaugu.info$Words[inaugu.info$Party=='Democratic'],
marker = list(color = 'orange',alpha=0.5),
line = list(color = 'orange',alpha=0.5),
name='Democratic') %>%
add_boxplot(y=inaugu.info$Words[inaugu.info$Party=='Republican'],
marker = list(color = 'blue',alpha=0.5),
line = list(color = 'blue',alpha=0.5),
name='Republican'),
align='center')
word.freq<-function(word,df){
words.list<-sapply(df$Fulltext,strsplit,split=' ')
count<-rep(NA,length(words.list))
for (i in 1:length(words.list)){
count[i]<-table(words.list[i])[word]/df[i,5]
}
names(count)<-NULL
count<-ifelse(is.na(count),0,count)
return (count)
}
## Count personal pronouns in speeches
inaugu.info$Icount<-word.freq('I',inaugu.info)
inaugu.info$youcount<-word.freq('you',inaugu.info)+
word.freq('You',inaugu.info)
inaugu.info$wecount<-word.freq('we',inaugu.info)+
word.freq('We',inaugu.info)
inaugu.info$theycount<-word.freq('they',inaugu.info)
## Compare the number of personal pronouns
library(ggplot2)
library(ggpubr)
p1<-ggplot(inaugu.info)+
geom_violin(aes(x=Party,y=Icount,fill=Party,color=Party),alpha=0.5)+
labs(y='Frequency',title="Mentions of I")+
theme(plot.title = element_text(hjust = 0.5))
p2<-ggplot(inaugu.info)+
geom_violin(aes(x=Party,y=youcount,fill=Party,color=Party),alpha=0.5)+
labs(y='Frequency',title="Mentions of You")+
theme(plot.title = element_text(hjust = 0.5))
p3<-ggplot(inaugu.info)+
geom_violin(aes(x=Party,y=wecount,fill=Party,color=Party),alpha=0.5)+
labs(y='Frequency',title="Mentions of We")+
theme(plot.title = element_text(hjust = 0.5))
p4<-ggplot(inaugu.info)+
geom_violin(aes(x=Party,y=theycount,fill=Party,color=Party),alpha=0.5)+
labs(y='Frequency',title="Mentions of They")+
theme(plot.title = element_text(hjust = 0.5))
ggarrange(p1,p2,p3,p4,common.legend=TRUE,legend = 'right')
library(readability)
readscore<-function(row){
grade<-readability(row[7],grouping.var = NULL)
return (grade)
}
inaugu.info<-adply(inaugu.info,1,readscore)
inaugu.info<-inaugu.info[,-12]
## Prepare for heatmap
id_name<-paste(inaugu.info$File,'-',inaugu.info$Term,sep='')
id_name<-c(id_name,c('DemocraticEND','','RepublicanBEGIN'))
party<-c(inaugu.info$Party,rep('Democratic',3))
id_name<-id_name[order(party)]
grade<-inaugu.info[,12:17]
grade[47:49,]<-rep(NA,6)
colnames(grade)<-c('F-K','G-F','C-L','SMOG','A-R','Average')
heat_mat<-cbind(grade,party)
heat_mat<-heat_mat[order(party),]
rownames(heat_mat)<-id_name
#devtools::install_github('ramnathv/htmlwidgets')
#library(htmlwidgets)
#install.packages('d3heatmap')
library(d3heatmap)
library(shiny)
div(d3heatmap(heat_mat[,-7], scale="none", colors= "Greens",
xaxis_font_size = 8,Rowv = FALSE,Colv=FALSE,show_grid=TRUE),
align='center')
library(tm)
library(tidytext)
### The democratic Party
setwd('E:/Columbia University/2018Spring/Applied Data Science/Github/Spring2018-Project1-Hongyu-Li/output/democratic')
##Write the democratic speeches into the democreatic file
for(i in 1:nrow(inaugu.info)){
if (inaugu.info[i,4]=='Democratic'){
text <- inaugu.info$Fulltext[i]
filename <- paste0(inaugu.info$File[i], "-",
inaugu.info$Term[i], ".txt")
sink(file = filename) %>% # open file to write
cat(text)  # write the file
sink() # close the file
}
}
speech.democratic<-Corpus(DirSource('E:/Columbia University/2018Spring/Applied Data Science/Github/Spring2018-Project1-Hongyu-Li/output/democratic'))
#Clean the data
speech.democratic<-tm_map(speech.democratic, stripWhitespace)
speech.democratic<-tm_map(speech.democratic, content_transformer(tolower))
speech.democratic<-tm_map(speech.democratic, removeWords, stopwords("english"))
speech.democratic<-tm_map(speech.democratic, removeWords, character(0))
speech.democratic<-tm_map(speech.democratic, removePunctuation)
d.tdm<-TermDocumentMatrix(speech.democratic)
d.tdm.tidy<-tidy(d.tdm)
d.tdm.tidy<-d.tdm.tidy %>% filter(count>=3)
democratic<-summarise(group_by(d.tdm.tidy, term), sum(count))
library(rJava)
library(wordcloud2)
library(htmlwidgets)
log<-system.file("examples/donkey.png",package = "wordcloud2")
wordcloud_democratic<-wordcloud2(democratic,color='random-light',
backgroundColor='dark',size=2,
minRotation = pi/2,maxRotation =pi/2,
rotateRatio = 0.5,figPath = log)
### The Republican Party
setwd('E:/Columbia University/2018Spring/Applied Data Science/Github/Spring2018-Project1-Hongyu-Li/output/republican')
##Write the democratic speeches into the democreatic file
for(i in 1:nrow(inaugu.info)){
if (inaugu.info[i,4]=='Republican'){
text <- inaugu.info$Fulltext[i]
filename <- paste0(inaugu.info$File[i], "-",
inaugu.info$Term[i], ".txt")
sink(file = filename) %>% # open file to write
cat(text)  # write the file
sink() # close the file
}
}
speech.republican<-Corpus(DirSource('E:/Columbia University/2018Spring/Applied Data Science/Github/Spring2018-Project1-Hongyu-Li/output/republican'))
#Clean the data
speech.republican<-tm_map(speech.republican, stripWhitespace)
speech.republican<-tm_map(speech.republican, content_transformer(tolower))
speech.republican<-tm_map(speech.republican, removeWords, stopwords("english"))
speech.republican<-tm_map(speech.republican, removeWords, character(0))
speech.republican<-tm_map(speech.republican, removePunctuation)
r.tdm<-TermDocumentMatrix(speech.republican)
r.tdm.tidy<-tidy(r.tdm)
r.tdm.tidy<-r.tdm.tidy %>% filter(count>=3)
republican<-summarise(group_by(r.tdm.tidy, term), sum(count))
ele<-system.file("examples/elephant.png",package = "wordcloud2")
wordcloud_republican<- wordcloud2(republican,color='random-light',
backgroundColor='dark',size=5,
minRotation = pi/2,maxRotation =pi/2,
rotateRatio = 0.5,figPath = ele)
library(sentimentr)
library(qdap)
library(syuzhet)
library(tibble)
sentiment.df<-NULL
for(i in 1:nrow(inaugu.info)){
sentences<-sent_detect(inaugu.info$Fulltext[i],
endmarks = c("?", ".", "!", "|",";"))
if(length(sentences)>0){
emotions<-get_nrc_sentiment(sentences)
word.count<-word_count(sentences)
emotions<-diag(1/(word.count+0.01))%*%as.matrix(emotions)
sentiment.df=rbind(sentiment.df,
cbind(inaugu.info[i,],
sentences=as.character(sentences),
word.count,
emotions,
sent.id=1:length(sentences)
)
)
}
}
## Summary emotions
presid.summary<-tbl_df(sentiment.df)%>%
group_by(Filename)%>%
summarise(
anger=mean(anger,na.rm=TRUE),
anticipation=mean(anticipation,na.rm=TRUE),
disgust=mean(disgust,na.rm=TRUE),
fear=mean(fear,na.rm=TRUE),
joy=mean(joy,na.rm=TRUE),
sadness=mean(sadness,na.rm=TRUE),
surprise=mean(surprise,na.rm=TRUE),
trust=mean(trust,na.rm=TRUE),
negative=mean(negative,na.rm=TRUE),
positive=mean(positive,na.rm=TRUE),
)
sent.df<-merge(inaugu.info[,c(1,3,4,6)],presid.summary,
by.x="Filename",by.y = 'Filename')
sent.df.d<-sent.df[sent.df$Party=='Democratic',-4]
sent.df.r<-sent.df[sent.df$Party=='Republican',-4]
d.name<-paste0(sent.df$President[sent.df$Party=='Democratic'],
sent.df$Term[sent.df$Party=='Democratic'])
d.name<-c(d.name,c('DemocraticEND','','RepublicanBEGIN'))
r.name<-paste0(sent.df$President[sent.df$Party=='Republican'],
sent.df$Term[sent.df$Party=='Republican'])
sent.df.d<-sent.df.d[,-c(1,2,3)]
sent.df.d[23:25,]<-rep(NA,10)
sent.mat.d<-data.matrix(sent.df.d)
rownames(sent.mat.d)<-d.name
sent.mat.r<-data.matrix(sent.df.r[,-c(1,2,3)])
rownames(sent.mat.r)<-r.name
sent.mat<-rbind(sent.mat.d,sent.mat.r)
library(d3heatmap)
library(shiny)
div(d3heatmap(sent.mat, scale="none", colors= "Reds",
xaxis_font_size = 8,Rowv = FALSE,Colv=FALSE,show_grid=TRUE),
align='center')
sink(file='E:/Columbia University/2018Spring/Applied Data Science/Github/Spring2018-Project1-Hongyu-Li/output/sentimentdata.csv')
write.csv(sentiment.df)
sink()
sink(file='E:/Columbia University/2018Spring/Applied Data Science/Github/Spring2018-Project1-Hongyu-Li/output/inauguinfo.csv')
write.csv(inaugu.info)
sink()
sentiment.df<-sentiment.df%>%
filter(!is.na(word.count))
sink(file='E:/Columbia University/2018Spring/Applied Data Science/Github/Spring2018-Project1-Hongyu-Li/output/sentimentdata.csv')
write.csv(sentiment.df)
sink()
